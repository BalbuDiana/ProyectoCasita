<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>