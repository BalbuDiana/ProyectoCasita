<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>